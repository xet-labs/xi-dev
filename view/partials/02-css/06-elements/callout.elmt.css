
.callout {
    --callout-color: var(--callout-default);
    --callout-icon: lucide-pencil;
}

.callout[data-callout="abstract"],
.callout[data-callout="summary"],
.callout[data-callout="tldr"] {
    --callout-color: var(--callout-summary);
    --callout-icon: lucide-clipboard-list;
}

.callout[data-callout="info"] {
    --callout-color: var(--callout-info);
    --callout-icon: lucide-info;
}

.callout[data-callout="todo"] {
    --callout-color: var(--callout-todo);
    --callout-icon: lucide-check-circle-2;
}

.callout[data-callout="important"] {
    --callout-color: var(--callout-important);
    --callout-icon: lucide-flame;
}

.callout[data-callout="tip"],
.callout[data-callout="hint"] {
    --callout-color: var(--callout-tip);
    --callout-icon: lucide-flame;
}

.callout[data-callout="success"],
.callout[data-callout="check"],
.callout[data-callout="done"] {
    --callout-color: var(--callout-success);
    --callout-icon: lucide-check;
}

.callout[data-callout="question"],
.callout[data-callout="help"],
.callout[data-callout="faq"] {
    --callout-color: var(--callout-question);
    --callout-icon: help-circle;
}

.callout[data-callout="warning"],
.callout[data-callout="caution"],
.callout[data-callout="attention"] {
    --callout-color: var(--callout-warning);
    --callout-icon: lucide-alert-triangle;
}

.callout[data-callout="failure"],
.callout[data-callout="fail"],
.callout[data-callout="missing"] {
    --callout-color: var(--callout-fail);
    --callout-icon: lucide-x;
}

.callout[data-callout="danger"],
.callout[data-callout="error"] {
    --callout-color: var(--callout-error);
    --callout-icon: lucide-zap;
}

.callout[data-callout="bug"] {
    --callout-color: var(--callout-bug);
    --callout-icon: lucide-bug;
}

.callout[data-callout="example"] {
    --callout-color: var(--callout-example);
    --callout-icon: lucide-list;
}

.callout[data-callout="quote"],
.callout[data-callout="cite"] {
    --callout-color: var(--callout-quote);
    --callout-icon: quote-glyph;
}

.callout {
    overflow: hidden;
    border-style: solid;
    border-color: rgba(var(--callout-color), var(--callout-border-opacity));
    border-width: var(--callout-border-width);
    border-radius: var(--callout-radius);
    margin: 1em 0;
    mix-blend-mode: var(--callout-blend-mode);
    background-color: rgba(var(--callout-color), 0.1);
    padding: var(--callout-padding);
}

.callout.is-collapsible .callout-title {
    cursor: var(--cursor);
}

.callout-title {
    padding: var(--callout-title-padding);
    display: flex;
    gap: var(--size-4-1);
    font-size: var(--callout-title-size);
    color: rgb(var(--callout-color));
    line-height: var(--line-height-tight);
    align-items: flex-start;
}

.callout-content {
    overflow-x: auto;
    padding: var(--callout-content-padding);
    background-color: var(--callout-content-background);
}

.callout-content .callout {
    margin-top: 20px;
}

.callout-icon {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
}

.callout-icon .svg-icon {
    color: rgb(var(--callout-color));
}

.callout-icon::after {
    content: "\200B";
}

.callout-title-inner {
    --font-weight: var(--callout-title-weight);
    font-weight: var(--font-weight);
    color: var(--callout-title-color);
}

.callout-fold {
    display: flex;
    align-items: center;
    padding-inline-end: var(--size-4-2);
}

.callout-fold::after {
    content: "\200B";
}

.callout-fold .svg-icon {
    transition: transform 100ms ease-in-out;
}

.callout-fold.is-collapsed .svg-icon {
    transform: rotate(calc(var(--direction) * -1 * 90deg));
}

.markdown-source-view.mod-cm6 .callout {
    margin: 0;
}

.markdown-source-view.mod-cm6 .callout-content .callout {
    margin: 1em 0;
}

/* Callouts
   Remember that callouts can be nested, so text direction can
   change within a nested set of callouts
*/
@supports selector(:has(*)) {

    .cm-callout:has(.callout .callout-title .callout-title-inner:dir(rtl)),
    .callout:has(> .callout-title .callout-title-inner:dir(rtl)) {
        direction: rtl;
    }

    .cm-callout:has(.callout .callout-title .callout-title-inner:dir(rtl))>.callout-title,
    .callout:has(> .callout-title .callout-title-inner:dir(rtl))>.callout-title {
        direction: rtl;
        --direction: -1;
    }

    .cm-callout:has(.callout .callout-title .callout-title-inner:dir(rtl))>.callout-title .callout-icon svg.svg-icon,
    .callout:has(> .callout-title .callout-title-inner:dir(rtl))>.callout-title .callout-icon svg.svg-icon {
        transform: scale(-1, 1);
    }
}

